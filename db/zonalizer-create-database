#!/usr/bin/env perl

use common::sense;

use AnyEvent;
use AnyEvent::CouchDB;
use AnyEvent::HTTP;
use JSON;
use OSSP::uuid;
use Getopt::Long;

my $drop = 0;
my $test = 0;

GetOptions(
    'drop' => \$drop,
    'test' => \$test
);

unless ( $ARGV[0] ) {
    die 'usage: zonalizer-create-database [--drop|--test] <uri>'
}

my $JSON = JSON->new;
my $db   = couchdb( $ARGV[0] );

if ( $drop ) {
    eval {
        $db->drop->recv;
    };
    undef $@;
}

$db->create->recv;

req( PUT => '_design/new_analysis', $JSON->encode( {
    _id => '_design/new_analysis',
    views => {
        all => {
            map => '
function (doc) {
    if (doc.type == "new_analyze" || doc.type == "analyze") {
        emit(doc.id);
    }
}
'
        }
    }
} ) )->recv;

req( PUT => '_design/analysis', $JSON->encode( {
    _id => '_design/analysis',
    views => {
        all => {
            map => '
function (doc) {
    if (doc.type == "analyze") {
        emit([doc.id, null]);
    }
}
'
        },
        map( {
            'by_' . $_ => {
                map => '
function (doc) {
    if (doc.type == "analyze") {
        emit([doc.' . $_ . ', doc.id, null]);
    }
}
'
              }
        } ( qw(fqdn created updated) ) ),
#        fqdn => {
#            map => '
#function (doc) {
#    if (doc.type == "analyze") {
#        var key = doc.fqdn.split(/\./).reverse();
#        key.push(null);
#        emit([key, doc.id, null]);
#    }
#}
#'
#        },
#        map( {
#            'fqdn_by_' . $_ => {
#                map => '
#function (doc) {
#    if (doc.type == "analyze") {
#        var key = doc.fqdn.split(/\./).reverse();
#        key.push(null);
#        emit([key, doc.' . $_ . ', doc.id, null]);
#    }
#}
#'
#              }
#        } ( qw(created updated) ) )
    }
} ) )->recv;

if ( $test ) {
    my $tlds = 10;

    while ( $tlds-- ) {
        my $tld = rndStr( 5, 'a' .. 'z' );
        my $zones = 10;

        while ( $zones-- ) {
            my $zone = rndStr( 12, 'a' .. 'z' );
            my $analysis = 4;

            while ( $analysis-- ) {
                my $uuid = OSSP::uuid->new;
                $uuid->make( 'v4' );

                $db->save_doc({
                    type => 'analyze',
                    id => MIME::Base64::encode_base64url( $uuid->export( "bin" ) ),
                    fqdn     => join('.', $zone, $tld),
                    status   => 'done',
                    progress => 100,
                    created  => time - 10 - int(rand(10)) - (30 * $analysis),
                    updated  => time + int(rand(5)) - (30 * $analysis),
                    summary  => {
                        notice => 0 + int(rand(2)),
                        warning => 0 + int(rand(1)),
                        error => 0 + int(rand(1)),
                        critical => 0 + int(rand(1))
                    }
                })->recv;
            }
        }
    }
}

sub rndStr {
    return join '', @_[ map { rand @_ } 1 .. shift ];
}

sub req {
    my ( $method, $path, $body ) = @_;
    my $cv = AnyEvent->condvar;

    http_request(
        $method => $db->uri . $path,
        headers => $db->_build_headers( {} ),
        body    => $body,
        sub {
            my ( $body, $headers ) = @_;
            if ( $headers->{Status} >= 200 and $headers->{Status} < 400 ) {
                $cv->send( $body );
            }
            else {
                $cv->croak( $db->uri . $path . ': ' . $headers->{Status} . ' - ' . $headers->{Reason} . ' - ' . $headers->{URL} );
            }
        }
    );

    return $cv;
}

=head1 NAME

zonalizer-create-database - Create the CouchDB database for Zonalizer

=head1 SYNOPSIS

zonalizer-create-database <uri>

=head1 AUTHOR

Jerry Lundström, C<< <lundstrom.jerry@gmail.com> >>

=head1 BUGS

Please report any bugs or feature requests to L<https://github.com/jelu/lim-plugin-zonalizer/issues>.

=head1 SUPPORT

You can find documentation for this module with the perldoc command.

    perldoc Lim::Plugin::Zonalizer

You can also look for information at:

=over 4

=item * Lim issue tracker (report bugs here)

L<https://github.com/jelu/lim-plugin-zonalizer/issues>

=back

=head1 ACKNOWLEDGEMENTS

=head1 LICENSE AND COPYRIGHT

Copyright 2015 Jerry Lundström
Copyright 2015 IIS (The Internet Foundation in Sweden)

This program is free software; you can redistribute it and/or modify it
under the terms of either: the GNU General Public License as published
by the Free Software Foundation; or the Artistic License.

See http://dev.perl.org/licenses/ for more information.

=cut
